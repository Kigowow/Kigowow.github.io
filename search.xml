<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>blog1</title>
    <url>/2019/03/26/blog1/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script>]]></content>
  </entry>
  <entry>
    <title>blog10</title>
    <url>/2020/05/12/blog10/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script>]]></content>
  </entry>
  <entry>
    <title>blog6</title>
    <url>/2020/04/20/blog6/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script>]]></content>
  </entry>
  <entry>
    <title>blog3</title>
    <url>/2019/04/01/blog3/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script>]]></content>
  </entry>
  <entry>
    <title>blog2</title>
    <url>/2019/03/28/blog2/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script>]]></content>
  </entry>
  <entry>
    <title>blog7</title>
    <url>/2020/05/01/blog7/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script>]]></content>
  </entry>
  <entry>
    <title>blog4</title>
    <url>/2020/04/05/blog4/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script>]]></content>
  </entry>
  <entry>
    <title>blog5</title>
    <url>/2020/04/15/blog5/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script>]]></content>
  </entry>
  <entry>
    <title>blog8</title>
    <url>/2020/05/08/blog8/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script>]]></content>
  </entry>
  <entry>
    <title>demo1</title>
    <url>/2020/06/04/demo1/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="展示"><a href="#展示" class="headerlink" title="展示"></a>展示</h1><h2 id="二级标题"><a href="#二级标题" class="headerlink" title="二级标题"></a>二级标题</h2><h3 id="三级标题"><a href="#三级标题" class="headerlink" title="三级标题"></a>三级标题</h3><p>老师们好，这是一个简单的博客发布展示。</p>
]]></content>
  </entry>
  <entry>
    <title>A business book I’d actually recommend</title>
    <url>/2020/05/25/recommend/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h5 id="Unlike-most-books-on-leadership-this-one-is-worth-your-time"><a href="#Unlike-most-books-on-leadership-this-one-is-worth-your-time" class="headerlink" title="Unlike most books on leadership, this one is worth your time."></a>Unlike most books on leadership, this one is worth your time.</h5><p><img src="https://media.gatesnotes.com/-/media/Images/Books/The-Ride-of-a-Lifetime/summer-books_2020_the-ride-of-a-lifetime_article-hero_1200x564_01.ashx" alt="img"></p>
<p>I don’t read many books about how to run a business. In my experience, it is rare to find one that really captures what it’s like to build and operate an organization or that has tips you could really put into practice.</p>
<p>Iger does a great job explaining what it is like to be a CEO. You’re always worried, “Which thing am I not spending enough time on?” As Iger writes, “You go from plotting growth strategy with investors, to looking at the design of a giant new theme-park attraction with Imagineers, to giving notes on the rough cut of a film, to discussing security measures and board governance and ticket pricing and pay scale… there are also, always, crises and failures for which you can never be fully prepared.” Although I never had to deal with most of those specific issues, the overall picture he draws is quite accurate.</p>
 <blockquote><p>“Iger decides to try to buy the most successful animation company out there: Pixar.”  </p>
</blockquote> 

<p>One of the most memorable parts of the book occurs in 2006, shortly after Iger becomes Disney’s CEO. Although the company had built its reputation on animation (including old classics like Snow White and modern ones like the original Lion King), by the time Iger took over, Disney had experienced a long series of box-office disappointments. Rather than trying to rebuild the studio, Iger decides to try to buy the most successful animation company out there: Pixar, whose CEO and majority owner was Apple co-founder Steve Jobs.</p>
<blockquote>
<p>“I am about to become your biggest shareholder and a member of your board,” Steve tells him. “And I think I owe you the right, given this knowledge, to back out of the deal.”</p>
</blockquote>
<p>Another big bet that Iger made was to build a streaming service that would host all of Disney’s content. It may seem obvious now, but at the time Iger made the decision, it was considered a risky move. Disney would have to take their content off other services, where it was generating healthy revenue streams for the company. Would they be cannibalizing their other business, like the ABC television network? Could they attract enough subscribers to make it worthwhile?</p>
<p><img src="https://tse2-mm.cn.bing.net/th/id/OIP.QNl8fvRSMehFqs90mLNapgHaFj?w=216&h=160&c=7&o=5&dpr=1.56&pid=1.7" alt="img"></p>
<p>Earlier this year, Iger stepped down as CEO of Disney after 15 years and announced that he plans to retire from the company in 2021. He has had a brilliant career. I think anyone would enjoy this book, whether they’re looking for business insights or just want a good read by a humble guy who rose up the corporate ladder to successfully run one of the biggest companies in the world.</p>
]]></content>
      <tags>
        <tag>book</tag>
      </tags>
  </entry>
  <entry>
    <title>my first blog</title>
    <url>/2017/04/24/my-first-blog/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="标题栏在这"><a href="#标题栏在这" class="headerlink" title="标题栏在这"></a>标题栏在这</h1><h2 id="二级标题的内容在这里"><a href="#二级标题的内容在这里" class="headerlink" title="二级标题的内容在这里"></a>二级标题的内容在这里</h2><p>这里是正文部分的内容，很容易分辨出来正文部分是什么样的东西。看清楚内容里面是什么。</p>
]]></content>
  </entry>
  <entry>
    <title>blog9</title>
    <url>/2020/05/10/blog9/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script>]]></content>
  </entry>
  <entry>
    <title>书评</title>
    <url>/2020/05/05/review/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="银河帝国书评"><a href="#银河帝国书评" class="headerlink" title="银河帝国书评"></a>银河帝国书评</h1><h5 id="二十世纪最伟大的科幻长篇小说之一"><a href="#二十世纪最伟大的科幻长篇小说之一" class="headerlink" title="二十世纪最伟大的科幻长篇小说之一"></a>二十世纪最伟大的科幻长篇小说之一</h5><blockquote>
<p>心理历史学家谢顿——生于银河纪元11988年，卒于12069年。他最伟大的贡献在于创建了统计科学心灵历史学……<br>——《银河百科全书》</p>
</blockquote>
<p><img src="https://tse1-mm.cn.bing.net/th/id/OIP.ptOJ_NmiHFhDGWaVCoPKBwHaJ4?w=189&h=252&c=7&o=5&dpr=1.56&pid=1.7" alt="img"></p>
<h3 id="段落节选"><a href="#段落节选" class="headerlink" title="段落节选"></a>段落节选</h3><blockquote>
<p>此行，尼克接受伟大谢顿的邀请，去银河帝国首都川陀加入巨大神秘的“谢顿计划”。<br>   为了一睹川陀的风采，他登上高耸入云的瞭望塔。只见庞杂的人造结构仿佛钢铁海洋。川陀，千秋万代的帝国统治中枢，四百亿人口几乎全数投入复杂的帝国行政事务。成千上万的船队夜以继日的向这里运输各种生活必需品。他不禁被川陀的恢弘所震撼，却丝毫没有嗅到繁华掩盖下的衰败之气。<br>   待回到房间，尼克发现来了个客人，那人开口道：“我是谢顿，川陀怎样？”<br>    “很壮观。”<br>　　“由心理史学来看呢，年轻人？”谢顿拿出计算机，布满岁月斑痕的手指灵敏地在按键上弹跳。“这是三世纪后的川陀，你来描述一下。”<br>　　尼克难以置信地说：“完全崩溃！帝位传承愈来愈不确定，而世家封邑愈来愈不受羁縻。作为政治枢纽的川陀成为野心家的目标，川陀将难以自保。”<br>　　“不错。明天你到大学来见我吧。”<br>　　“好的。”<br>　　<br>   尼克没能遵守约定，因为第二天一早他就突然被警察局监禁。他们一次又一次地向他询问谢顿计划的事。<br>　　尼克面带傲色，“我有权请律师。”<br>　　“律师会来的。”询问官冷言道。<br>　　律师名叫罗雅矜，谢顿指定我分担任尼克的律师。<br>“我要向皇帝提出紧急申诉！”尼克咆哮道。<br>　　罗雅矜毫不理睬暴怒的尼克，他取出防窃听干扰器，冷笑道：“事实上你投诉无门。川陀，现在被家族掌握，不过这完全在心灵历史的计算中。你的被捕，也是谢顿博士料定的事情，毕竟警察局对他的活动越来越敌视了。我来只是告诉你事情会善了的，你不用害怕。”<br>　　“这话是什么意思？我要见谢顿。”<br>　　“很遗憾，他也被捕了。”<br>　　尼克呻吟一声，一阵孤寂袭上心头。</p>
</blockquote>
<p><img src="https://tse4-mm.cn.bing.net/th/id/OIP.2nKyyh4dJhX8rjm8ipArOgHaFL?w=298&h=201&c=7&o=5&dpr=1.56&pid=1.7" alt="img"></p>
<h3 id="保罗·克鲁格曼论《基地》"><a href="#保罗·克鲁格曼论《基地》" class="headerlink" title="保罗·克鲁格曼论《基地》"></a>保罗·克鲁格曼论《基地》</h3><p>有些小说可以塑造十几岁小男孩的生活。对有些人来说，是安·兰德的《阿特拉斯耸耸肩》；对令一些人来说，是托尔金的《指环王》。据一条被广泛引用的网络迷因（internet meme），前一本书中描写的架空世界可以永远地扭曲一个少年的性格；而另一本书则是关于半兽人的。当然，这两部书都没有对我来产生影响。我的书已经跟随我45年了，是艾萨克·阿西莫夫的《基地》三部曲，这是阿斯莫夫刚刚20出头时写的。我并不想成长方下巴的利己主义者或者参加英雄式的探险远征；我想成为哈里·谢顿（Hari Seldon），凭着我对研究人类行为数学规律的理解来承担起拯救文明的重担。</p>
<p>好吧，经济学仅仅是非常可怜的替代品；我并不想为几百年后在轮回屋的露面而准备录像。但是我努力过了。现在我已经——正如奶奶过去所说的——长大成人了，《基地》系列小说对我而言又意味着什么呢？我从未觉得它们如此精彩。三部曲真是独一无二的杰作，从来没有别的作品达到它的高度了。另外，如果你还不想被剧透，下面的文字就不要再读了。</p>
<p>也许，关于《基地》首先要说的是，它并非严格意义上的科幻小说。是的，其故事发生在未来，里面有星际旅行，人们相互射击用的是爆击枪而不是手枪，如此等等。但这些只是些表面的细节，故事的浅层次部分。《基地》系列小说是关于社会的，而不是这些小玩意儿的，看起来社会并不会受到科技进步的太大影响——这和威廉·吉普森的赛博朋克（cyberpunk）小说并不一样，虽然后者也同样非常的完美，不过是以另一种方式。阿西莫夫小说中的银河帝国非常像罗马帝国。川陀，帝国的首都，就像是40年代曼哈顿的超级升级版。《基地》本身看起来有点像美国历史的总结，有过腐败政客和无道德底线的工业财阀；三部曲的最后，故事发展的很像20世纪中期的事情。——尽管阿西莫夫明确说明这并不是其最终状态。</p>
<p>因此，如果想找激烈火爆的动作场面，像是在最紧急时刻汉·索罗和卢克·天行者摧毁死星那样的，你恐怕要失望了。小说中仅有一场简短的太空战斗的描写——而我们知道，其真正目的，并不是打败一些敌人的喽啰而是创造一种服从于谢顿计划的心理状态。公平地讲，确实有一个情节，讲述整个星系的命运取决于女主角贝妲·达瑞尔（《基地和帝国》的结尾）的快速行动。但也不是传统的动作描写：贝妲在最后时刻是射杀了一个好人才转危为安的。</p>
<p>尽管没有传统的扣人心弦的因素，最重要的是没有善恶对决，《基地》系列小说还是能震颤人心的——悬疑丛生、引人入胜，让我说的话还有优雅的反讽。没有传统的扣人心弦并非意味着没有非传统的扣人心弦。</p>
<p>在第一本小说和第二本的前半部分中，有好多次整个星系看起来都命悬一线，因为基地面对很多灭亡的威胁，既有野蛮人的国王、地方军阀，甚至还有“瘦死的骆驼比马大”的帝国本身。在这一系列危机中，都有风云人物出现，他们的勇敢和机警好似成为了最后的希望。每一次，基地都化险为夷。但戏谑之处在于：事实上，事后都可以很明显的看出来，他们的勇敢和机警都无关紧要，因为根据心理史学定律，基地注定要赢的。每次，为了推动情节深入，几个世纪之前录下来的哈里·谢顿的影像都要在轮回屋中露面，来向所有人解释到底发生了什么。野蛮人绝不可能取胜，因为基地的超高科技（以宗教的形式出现），让它可以弹指一挥间就可以搞定这些敌人。军阀们的武器也对抗不了基地的经济打击。诸如此类。</p>
<p>如果说《基地》系列是充满预言的传奇故事的话，它也是世俗版的。里面说的不是神秘传人继承遗产，也不是无敌的剑客用高超剑技战胜敌人。很显然阿西莫夫鄙视上层社会和尚武精神；他的主角，是朴实无华的，甚至还有点粗野，没有一点好战的色彩。“暴力是无能者最后庇护所，”书中的韩定市长这样讲过。</p>
<p><img src="https://tse1-mm.cn.bing.net/th/id/OIP.i9-1hxfWXLnddBz2zBsTvwHaEo?w=230&h=160&c=7&o=5&dpr=1.56&pid=1.7" alt="img"></p>
<p>《基地》系列有缺陷吗？当然有。总的来说，其中的角色，大都是纸片般的单薄。小说中也没有对人物——嗯，任何事物——的详细描述。我说啊，托尔斯泰就不是这样子。更无关紧要，确实是更、更、更无关紧要的一点：尽管阿西莫夫在将历史复制到星系文明上令人印象深刻，但是他在比例规模上有着明显的纰漏。在《第二基地》中，Tazenda被认为差不多是个野蛮人的王国，一个仅仅统治着20个星球的污点国家。嗯，20个星球啊？还有川陀，这个世界完全被金属外壳包围，因为其7500万平方英里的土地要养活400亿人口。算一下吧，你就知道川陀的人口密度只有新泽西的一半，上一次我从窗户看出去的时候这里并没有被金属包围啊。</p>
<p>举个并不随意的例子说吧，IS-LM模型这一宏观经济学理论告诉我们，在现在我们正经历的经济衰退条件下，有些通常的定律不再适用：数万亿元的财政赤字不会推高利率，货币供给的大幅度增加也不会引起失控的通货膨胀。大约是2009年，接受这一模型的经济学家们因为这种违反常理的主张被大加奚落，受到猛烈的抨击。但是他们的预测成真了。所以说，是的，有可能存在那种社会科学，可以预测将来，甚至是可能促进更好的未来。</p>
<p>但是和单薄的人物形象一样，《基地》系列的这些小瑕疵都无关大局。小说唯一留下的，是一段激动人心的传奇，述说“自知之明”——对我们所处的社会如何运作的理解——如何改善历史进程。这套小说仍然鼓舞着我，和许多年前我第一次读到它的时候一样。</p>
<p><img src="https://tse2-mm.cn.bing.net/th/id/OIP.WD3CIZBrvWtFVHxVo9lX0wHaEo?w=300&h=187&c=7&o=5&dpr=1.56&pid=1.7" alt="img"></p>
]]></content>
      <tags>
        <tag>book</tag>
      </tags>
  </entry>
  <entry>
    <title>test</title>
    <url>/2020/05/26/test/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="This-is-a-test-blog"><a href="#This-is-a-test-blog" class="headerlink" title="This is a test blog."></a>This is a test blog.</h1><h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2> <blockquote><p>Do not just seek happiness for yourself. Seek happiness for all. Through kindness. Through mercy.  </p>
<footer><strong>David Levithan</strong><cite>Wide Awake</cite></footer></blockquote>  

<blockquote><p>To be or not to be, that’s a question.  </p>
<footer><strong>William Shakespeare</strong><cite>Hamlet</cite></footer></blockquote> 
<p><img src="https://tse2-mm.cn.bing.net/th/id/OIP.3lEFlQ75VZI0cluGVseehgAAAA?w=175&h=215&c=7&o=5&dpr=1.56&pid=1.7" alt="shakespears"></p>
<p>For ‘tis aquestion left us yet to prove,</p>
<p>Whether lovelead fortune, or else fortune love.</p>
<p>The great mandown, you mark his favourite flies;</p>
<p>The poor advancedmakes friends of enemies.</p>
<p>And hithertodoth love on fortune tend;</p>
<p>For who notneeds shall never lack a friend,</p>
<p>And who in wanta hollow friend doth try,</p>
<p>Directly seasonshim his enemy.</p>
<p>But, orderly toend where I begun,</p>
<p>Our wills andfates do so contrary run</p>
<p>That our devicesstill are overthrown;</p>
<p>Our thoughts areours, their ends none of our own:</p>
]]></content>
  </entry>
  <entry>
    <title>test28</title>
    <url>/2020/05/27/test28/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="显示效果测试"><a href="#显示效果测试" class="headerlink" title="显示效果测试"></a>显示效果测试</h1><h2 id="中文（标题二级）"><a href="#中文（标题二级）" class="headerlink" title="中文（标题二级）"></a>中文（标题二级）</h2><hr>
<p>正文显示效果</p>
<h1 id="雾"><a href="#雾" class="headerlink" title="雾"></a>雾</h1><p>早晨七点中左右，起雾了。这江北的雾虽不及江南的湿润，也不及北方的干涩，却恰到好处，没走向极端。</p>
<p>这雾如同淘气的孩子，你不逮它，它便在你身边游荡，左窜、右窜，当生气时，想揪住它，它却悄然消失。</p>
<h3 id="图片预览"><a href="#图片预览" class="headerlink" title="图片预览"></a>图片预览</h3><p><img src="https://tse3-mm.cn.bing.net/th/id/OIP.Pn9LvjVp_qgMpVzk79jCQAHaE7?w=290&h=188&c=7&o=5&dpr=1.56&pid=1.7" alt="img"></p>
]]></content>
  </entry>
  <entry>
    <title>my first blog</title>
    <url>/2018/05/12/%E5%AE%9E%E9%AA%8C/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="title"><a href="#title" class="headerlink" title="title"></a>title</h1><h2 id="story"><a href="#story" class="headerlink" title="story"></a>story</h2><p>This is a story that I have to talk about in the beginning of a long journey.</p>
<p><img src="/images/1.jpg" alt="doom"></p>
<h2 id="end"><a href="#end" class="headerlink" title="end"></a>end</h2><p>Find the way home.</p>
]]></content>
  </entry>
  <entry>
    <title>实验3</title>
    <url>/2018/05/18/%E5%AE%9E%E9%AA%8C3/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="想要声明的点"><a href="#想要声明的点" class="headerlink" title="想要声明的点"></a>想要声明的点</h1><p>魂系列与宫崎英高。</p>
<p>魂系列是近十年内最受欢迎的游戏系列之一，从2009年发售的恶魔之魂开始，游戏就奠定了自己的基调，玩法，系统以及叙事手法。可以说魂系列开创了一个新的亚游戏类型，即所谓的受死游戏。</p>
]]></content>
  </entry>
  <entry>
    <title>实验2</title>
    <url>/2018/05/14/%E5%AE%9E%E9%AA%8C2/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="这个实验"><a href="#这个实验" class="headerlink" title="这个实验"></a>这个实验</h1><p>关于这次的实验，必须说明的是自己的一些亲身经历与体验，想了解的话必须自己动手实践，自己动手才是硬道理，这一点谁都无法改变。必须要向现实妥协，不论你是否愿意。</p>
]]></content>
  </entry>
  <entry>
    <title>小学的一篇小练笔</title>
    <url>/2009/12/04/%E6%97%A7%E4%BA%8B%E9%87%8D%E6%8F%90/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="雾"><a href="#雾" class="headerlink" title="雾"></a>雾</h1><p>早晨七点中左右，起雾了。这江北的雾虽不及江南的湿润，也不及北方的干涩，却恰到好处，没走向极端。</p>
<p>这雾如同淘气的孩子，你不逮它，它便在你身边游荡，左窜、右窜，当生气时，想揪住它，它却悄然消失。</p>
]]></content>
      <tags>
        <tag>小练笔</tag>
      </tags>
  </entry>
  <entry>
    <title>贪心算法</title>
    <url>/2019/02/12/%E8%B4%AA%E5%BF%83%E7%AE%97%E6%B3%95/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="贪心算法的实现示例"><a href="#贪心算法的实现示例" class="headerlink" title="贪心算法的实现示例"></a>贪心算法的实现示例</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"> </span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Node</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">	<span class="keyword">float</span> weight;</span><br><span class="line">	<span class="keyword">float</span> value;</span><br><span class="line">	<span class="keyword">bool</span> mark;</span><br><span class="line">	<span class="keyword">char</span> char_mark;</span><br><span class="line">	<span class="keyword">float</span> pre_weight_value;</span><br><span class="line">&#125;;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span>* argv[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">float</span> Weight[<span class="number">7</span>] = &#123;<span class="number">35</span>,<span class="number">30</span>,<span class="number">60</span>,<span class="number">50</span>,<span class="number">40</span>,<span class="number">15</span>,<span class="number">20</span>&#125;;</span><br><span class="line">	<span class="keyword">float</span> Value [<span class="number">7</span>] = &#123;<span class="number">10</span>,<span class="number">40</span>,<span class="number">30</span>,<span class="number">50</span>,<span class="number">35</span>,<span class="number">40</span>,<span class="number">30</span>&#125;;</span><br><span class="line">	Node <span class="built_in">array</span>[<span class="number">7</span>];</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;<span class="number">7</span>; i++)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">array</span>[i].value = Value[i];</span><br><span class="line">		<span class="built_in">array</span>[i].weight = Weight[i];</span><br><span class="line">		<span class="built_in">array</span>[i].char_mark = <span class="number">65</span> + i;</span><br><span class="line">		<span class="built_in">array</span>[i].mark = <span class="literal">false</span>;</span><br><span class="line">		<span class="built_in">array</span>[i].pre_weight_value = Value[i] / Weight[i];</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">7</span>;i++)</span><br><span class="line">		<span class="built_in">cout</span>&lt;&lt;<span class="built_in">array</span>[i].pre_weight_value&lt;&lt;<span class="string">" "</span>;</span><br><span class="line">	<span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">float</span> weight_all=<span class="number">0.0</span>;</span><br><span class="line">	<span class="keyword">float</span> value_all = <span class="number">0.0</span>;</span><br><span class="line">	<span class="keyword">float</span> <span class="built_in">max</span> = <span class="number">0.0</span>;</span><br><span class="line">	<span class="keyword">char</span> charArray[<span class="number">7</span>];</span><br><span class="line">	<span class="keyword">int</span> flag,n = <span class="number">0</span>;</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">while</span>(weight_all &lt;= <span class="number">150</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> index=<span class="number">0</span>;index &lt; <span class="number">7</span>; ++index)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">if</span>(<span class="built_in">array</span>[index].pre_weight_value &gt; <span class="built_in">max</span> &amp;&amp; <span class="built_in">array</span>[index].mark == <span class="literal">false</span>)</span><br><span class="line">			&#123;</span><br><span class="line">				<span class="built_in">max</span> = <span class="built_in">array</span>[index].pre_weight_value ;</span><br><span class="line">				flag = index;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		</span><br><span class="line">		charArray[n++] = <span class="built_in">array</span>[flag].char_mark;</span><br><span class="line">		<span class="built_in">array</span>[flag].mark = <span class="literal">true</span>;</span><br><span class="line">		weight_all += <span class="built_in">array</span>[flag].weight;</span><br><span class="line">		value_all += <span class="built_in">array</span>[flag].value;</span><br><span class="line">		<span class="built_in">max</span> = <span class="number">0.0</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;n<span class="number">-1</span>;i++)</span><br><span class="line">		<span class="built_in">cout</span>&lt;&lt;charArray[i]&lt;&lt;<span class="string">" "</span>;</span><br><span class="line">	<span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">	<span class="built_in">cout</span>&lt;&lt;<span class="string">"weight_all:"</span>&lt;&lt;weight_all- <span class="built_in">array</span>[n<span class="number">-1</span>].weight&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">	<span class="built_in">cout</span>&lt;&lt;<span class="string">"value_all:"</span>&lt;&lt;value_all&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">	</span><br><span class="line">	system(<span class="string">"pause"</span>);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>code</tag>
      </tags>
  </entry>
  <entry>
    <title>深度优先遍历</title>
    <url>/2019/05/05/DFS/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="DFS（deep-first-search"><a href="#DFS（deep-first-search" class="headerlink" title="DFS（deep first search)"></a>DFS（deep first search)</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"> </span><br><span class="line"><span class="comment">//访问标志的数组,为1表示访问过，为0表示未被访问</span></span><br><span class="line"><span class="keyword">int</span> visted[<span class="number">100</span>];</span><br><span class="line"><span class="comment">//边表结点</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">EdgeNode</span> &#123;</span></span><br><span class="line">    <span class="comment">//顶点对应的下标</span></span><br><span class="line">    <span class="keyword">int</span> adjvex;</span><br><span class="line">    <span class="comment">//指向下一个邻接点</span></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">EdgeNode</span> *<span class="title">next</span>;</span></span><br><span class="line">&#125; edgeNode;</span><br><span class="line"> </span><br><span class="line"><span class="comment">//顶点表结点</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">VertexNode</span> &#123;</span></span><br><span class="line">    <span class="comment">//顶点数据</span></span><br><span class="line">    <span class="keyword">char</span> data;</span><br><span class="line">    <span class="comment">//边表头指针</span></span><br><span class="line">    edgeNode *firstedge;</span><br><span class="line">&#125; VertexNode, AdjList[<span class="number">100</span>];</span><br><span class="line"> </span><br><span class="line"><span class="comment">//集合</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> &#123;</span></span><br><span class="line">    AdjList adjList;</span><br><span class="line">    <span class="comment">//顶点数和边数</span></span><br><span class="line">    <span class="keyword">int</span> numVertexes, numEdges;</span><br><span class="line">&#125; GraphAdjList;</span><br><span class="line"> </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AdjacencyList</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">CreateALGraph</span><span class="params">(GraphAdjList *G)</span></span>;</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">ShowALGraph</span><span class="params">(GraphAdjList *G)</span></span>;</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">DFS</span><span class="params">(GraphAdjList *G, <span class="keyword">int</span> i)</span></span>;</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">DFSTraverse</span><span class="params">(GraphAdjList *G)</span></span>;</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Test</span><span class="params">()</span></span>;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">&#125;;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">AdjacencyList::CreateALGraph</span><span class="params">(GraphAdjList *G)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i, j, k;</span><br><span class="line">    edgeNode *e;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"输入顶点数和边数"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="comment">//输入顶点数和边数</span></span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; G-&gt;numVertexes &gt;&gt; G-&gt;numEdges;</span><br><span class="line">    <span class="comment">//读入顶点信息，建立顶点表</span></span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; G-&gt;numVertexes; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//输入顶点信息</span></span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; G-&gt;adjList[i].data;</span><br><span class="line">        <span class="comment">//将边表置为空表</span></span><br><span class="line">        G-&gt;adjList[i].firstedge = <span class="literal">NULL</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//建立边表（头插法）</span></span><br><span class="line">    <span class="keyword">for</span> (k = <span class="number">0</span>; k &lt; G-&gt;numEdges; k++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">"输入边（vi,vj）上的顶点序号"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; i &gt;&gt; j;</span><br><span class="line">        e = <span class="keyword">new</span> EdgeNode;</span><br><span class="line">        e-&gt;adjvex = j;</span><br><span class="line">        e-&gt;next = G-&gt;adjList[i].firstedge;</span><br><span class="line">        G-&gt;adjList[i].firstedge = e;</span><br><span class="line"> </span><br><span class="line">        e = <span class="keyword">new</span> EdgeNode;</span><br><span class="line"> </span><br><span class="line">        e-&gt;adjvex = i;</span><br><span class="line">        e-&gt;next = G-&gt;adjList[j].firstedge;</span><br><span class="line">        G-&gt;adjList[j].firstedge = e;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">AdjacencyList::Test</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"ALL IS OK."</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">AdjacencyList::ShowALGraph</span><span class="params">(GraphAdjList *G)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; G-&gt;numVertexes; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">"顶点"</span> &lt;&lt; i &lt;&lt; <span class="string">": "</span> &lt;&lt; G-&gt;adjList[i].data &lt;&lt; <span class="string">"--firstedge--"</span>;</span><br><span class="line">        edgeNode *p = <span class="keyword">new</span> edgeNode;</span><br><span class="line">        p = G-&gt;adjList[i].firstedge;</span><br><span class="line">        <span class="keyword">while</span> (p)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; p-&gt;adjvex &lt;&lt; <span class="string">"--Next--"</span>;</span><br><span class="line">            p = p-&gt;next;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">"--NULL"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">AdjacencyList::DFS</span><span class="params">(GraphAdjList *G, <span class="keyword">int</span> i)</span> </span>&#123;</span><br><span class="line">    EdgeNode *p;</span><br><span class="line">    visted[i] = <span class="number">1</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; G-&gt;adjList[i].data &lt;&lt; <span class="string">"--"</span>;</span><br><span class="line">    p = G-&gt;adjList[i].firstedge;</span><br><span class="line">    <span class="keyword">while</span> (p)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (!visted[p-&gt;adjvex])</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">//递归访问</span></span><br><span class="line">            DFS(G, p-&gt;adjvex);</span><br><span class="line">        &#125;</span><br><span class="line">        p = p-&gt;next;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">AdjacencyList::DFSTraverse</span><span class="params">(GraphAdjList *G)</span> </span>&#123;</span><br><span class="line">    <span class="comment">//初始化所有顶点都没有访问过</span></span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"深度优先遍历结果为："</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; G-&gt;numVertexes; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        visted[i] = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; G-&gt;numVertexes; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (visted[i] == <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            DFS(G, i);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"> </span><br><span class="line">    AdjacencyList adjacencyList;</span><br><span class="line">    GraphAdjList *GA = <span class="keyword">new</span> GraphAdjList;</span><br><span class="line">    adjacencyList.Test();</span><br><span class="line">    adjacencyList.CreateALGraph(GA);</span><br><span class="line">    adjacencyList.ShowALGraph(GA);</span><br><span class="line">    adjacencyList.DFSTraverse(GA);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>code</tag>
      </tags>
  </entry>
  <entry>
    <title>书评“1984”</title>
    <url>/2018/08/18/book1/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="《1984》书评"><a href="#《1984》书评" class="headerlink" title="《1984》书评"></a>《1984》书评</h2><blockquote>
<p>历史不是一面镜子，而是黑板上的记号，可以随时擦去，随时填补。更为可怕的是，一旦涂改了，你找不到证据去证明这是篡改历史的行为。</p>
</blockquote>
<h3 id="我们将在黑暗中相见"><a href="#我们将在黑暗中相见" class="headerlink" title="我们将在黑暗中相见"></a>我们将在黑暗中相见</h3><p><img src="https://m.media-amazon.com/images/I/612oBD9OSjL._SL500_.jpg" alt="img"></p>
<p>我被它彻底击垮了，彻底击垮了。<br>从书的第三部份，与奥勃良的漫长的对话开始无法控制眼泪不断掉下来流出来涌出来无法克制想要颤抖无法克制想要揪住一个人告诉他我有多么恐惧多么害怕多么无助多么惭愧。<br>如果伪善尚且是一种对善的肯定，那么当奥勃良告诉你权力就是为了权力，殴打就是为了殴打，当你也以为至少它会以一种貌似美好的形态说服你迷惑你，却被以如此赤裸且不可抗拒无可辩驳难以质疑的——丑恶？残忍？这些词都太轻微了——告知，那种绝望的感觉使你宁愿去相信它不是如它自己所承认的这般(我无法找到的那个合适的形容词)<br>或者这就是最后温斯顿终于明白自己是多么热爱着老大哥的原因。</p>
<p>我曾经随着温斯顿一同对那块珊瑚充满美好的情感，为那张证明存在过的事实的照片感到激动，为黄金道为红木床为歌唱的鸟为纤细的腰。并且对那他们所深知的命运怀有逃避的幻想，这一切情绪是同他们一起的。<br>直到，最终命运到来的时候，所有不甚明朗的都明朗了，但这种明朗太具摧毁性。我无法感知肉体上的痛苦，即便描述得再好也不可能身临其境。只有精神上的是可以互通的。比如对奥勃良，既敬畏，又觉得他是保护自己的，这很奇怪。至于双重思想，或者那奥勃良对温斯顿的漫长的教诲过程，简直让人疯狂。你试图去坚持，去申辩，去证明自己是对的——可在他们看来，一切可以证明的证明都是不存在的——那么如果没有了你所以为的过去，又能拿什么来证明你的现在呢？<br>更可怕的是个人的无意义和集体的不灭。让我想起军团蚁，这种所过之处都将一片死寂的生物，它们并不在乎抱成一团过河时外围成千上万死去的同胞——即使它们自己，也对于自己的死毫不在乎——重要的是集团的存在。<br>所以当你认为一切有意义的都被否认时，所有生的价值也就不存在了。对一个只为把生活变得更糟的不得不服从的意志再抱有任何希望或抵触都是愚蠢的犯罪。所以最后，奥勃良成功的把二加二等于了五。<br>至于101号房，那的确是真正最可怕的地方。温斯顿之所以会认为希望在无产者中正是由于他们尚存有的情感。这也是温斯顿，或者我，能坚持的最后的防线。可是他们把这也捏的粉碎，而且是让你自己把它捏的粉碎。恐惧的本能真的能胜过爱的本能吗？</p>
<p>我感到体无完肤，也许我们应该庆幸现在的生活，即使许多时候是处于无知的力量，奴役的自由中。</p>
<p>看完的时候眼睛通红的，我给我的裘莉亚发了条消息：“它让我觉得恐惧，害怕，无助，让我没办法就会有眼泪出来，不是出于悲伤，不是出于情感，而是出于本能。有些部份也曾经让我感到快乐，然后是无畏，然后是疑惑，疯狂的被控制的疑惑，然后就是彻底的完蛋的感觉。这糟透了糟透了糟透了，我没有办法眼泪就会掉下来我没有办法我没有办法我没有办法。宝贝我害怕失去你，害怕不爱你，这是最后击溃我的东西”。</p>
]]></content>
      <tags>
        <tag>book</tag>
      </tags>
  </entry>
  <entry>
    <title>书评 乔布斯传</title>
    <url>/2017/08/25/book2/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="读-乔布斯传"><a href="#读-乔布斯传" class="headerlink" title="读 乔布斯传"></a>读 乔布斯传</h2><h3 id><a href="#" class="headerlink" title></a></h3><blockquote>
<p>Your time is limited, so don’t waste it living someone else’s life. Don’t be trapped by dogma - which is living with the results of other people’s thinking. Don’t let the noise of other’s opinions drown out your own inner voice. And most important, have the courage to follow your heart and intuition. They somehow already know what you truly want to become. Everything else is secondary.<br><img src="https://img3.doubanio.com/view/subject/l/public/s6974202.jpg" alt="img"></p>
</blockquote>
<p>这不是一篇读后感。<br>你觉得怎样的人才适合追忆乔布斯?</p>
<p>忠实的果粉说: “我上班背着Air，SOHO的时候用Pro工作，家里有27寸的iMac给老婆和孩子使用，用iPad来阅读和娱乐，160G的IPC存着我所有的勃拉姆斯和莫扎特，iPhone不必说是唯一的通讯工具，就是出门老婆经常要Facetime限制了我一些自由，商业会议只用深蓝渐变色主题的Keynote，哦，差点忘了，我刚让楼下的大爷给我的后脑勺修出一个苹果的Logo，大爷说你是这周第三个提这个要求的人了，这有点让我失落。”</p>
<p>人生赢家总是少数，我苦苦挣扎的岁月里只买过两件苹果产品，一个是08年的iPod Touch，半年前刚刚落水溺死。一个是现在还在用的不带摄像头的iPad。<br>我觉得这样的我是没什么资格追忆乔布斯的 —— 我还没提我给Touch和iPad都贴了15块钱一张的磨砂贴膜。<br>我只是个普通的消费者，iDevices改变了我的生活，但我不会因为失去他们而没法生活。<br>我不是一个果粉，我从没好意思在地铁上或者星巴克里掏出自己不带摄像头的iPad大战僵尸，也压根没想过卖几个肾去试用一下阳光下是不是真的能看的清短信，偶尔使用别人的Mac我总是忘记Ctrl加空格不能切换输入法，我吃苹果甚至不会咬一口就扔掉。</p>
<p>这样的我看上去绝不应该来这里废话，但我要为自己辩驳。我不是果粉，但是我崇敬Steve Jobs，甚至有些着迷，这点比得上任何人。<br>我高考英语作文中最后一句话写的是Stay Hungry, Stay Foolish；我大学考GRE作文里面举得例子是乔布斯吃寺庙的救济粮也要听书法课从而美化了麦金塔；但凡同学师长同事问起你的人生理想，我都会无比骄傲地说一句Change the World；这不是装X，几千元的iDevices没有颠覆我的生活，Jobs did.</p>
<p>我没怎么和乔布斯打过交道。说得再坦荡一点，我只和Genius Bar里面的中国孩子们打过三个小时交道，其中两个半小时还在排队。<br>但我本以为我可以，这甚至一直是我奋斗的动力，我对以后能赚钱买几个iPhone没有兴趣，我的梦想是总有一天我会到库比蒂诺的飞船总部里喝杯咖啡，起码和乔布斯打声招呼，提醒他翻毛皮鞋沾了些灰尘。<br>可他却没有留给我这样的机会。</p>
<p>这就是为什么当我10月5号早上8点30照常睁眼刷推看到消息的时候心碎了一地，如同初中的时候发现暗恋的女孩子牵着别人的手一样。<br>没有比这更贴切的比喻了，我不知道中国是不是真的有18岁以上的男人听到消息哭出了眼泪，我没有，我甚至没有太过悲伤。你总会懂得这世上漂亮姑娘和传奇人物都很多很多，传奇人物不断地改变着这个时代，用一句句Follow your heart指引你奋斗的方向，但毕竟美女和传奇都离你太远太远，甚至可能是个六度理论的反例，生活还要继续，你没必要太过悲伤。</p>
<p>说实话我期望自己能更了解Steve，于是那天我终于狠下心订了129的美版传记，即使这样我也知道，别人口中的他，再真实，也不足为信。<br>拿到书大致翻了翻，Isaacson的叙述很朴实，行文也没有什么华丽的辞藻，书中的插图虽然不多，但每一张都很有意思，看得出是经过精心挑选的。<br>我虽然还没有读书，但是我相信乔布斯吸引人的故事和传说太多。</p>
<p>太传奇的故事总让人觉得和易碎的暗恋一样不靠谱，我宁可放弃享受手指在Jobs的艺术品上划来划去的触感，也希望哪怕有一个机会能走过去拍拍他的肩膀，说句Hey buddy what’s up.</p>
<p>究竟什么人才适合缅怀乔布斯? 什么人才能不人云亦云，而真正为Jobs触动、启示?</p>
<p>我觉得这里没人适合，我们所做的一切的评述都处在一个离奇的立场，可能并没有多少人会舍得笔墨，写篇超过140字的长文来讲讲他和乔布斯的故事——因为我们没有故事。</p>
<p>世界上最孤独的人是小说家，越多的人阅读他们的想象力与思考，他们就越定型，也越孤独。<br>从这个意义上说，卖出了几亿部iPhone的Steve Jobs，也孤独了56年。</p>
<p>还记得WWDC2007上Jobs拿起iPhone 1代，从Google maps上找到附近的Starbucks的电话，拨过去说我们要450杯咖啡，转而狡黠的一笑，对着蒙住的接线员小姐说Oops just kidding wrong number sorry bye吗？</p>
<p>说实话，也许那个可怜的接线员小姐都比我们更有资格追忆。</p>
<p>但愿当跟风的人们已经脱下纪念的体恤，即将忘记离去的人是乔布斯、哈尔斯还是汤姆斯，匆匆忙忙赶下一班地铁的时候，你能有时间安安静静地坐下来，捧起这本传记，给自己一个微不足道的，追忆的理由。</p>
]]></content>
      <tags>
        <tag>book</tag>
      </tags>
  </entry>
  <entry>
    <title>广度优先遍历</title>
    <url>/2018/03/26/BFS.md/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="BFS-broad-first-search"><a href="#BFS-broad-first-search" class="headerlink" title="BFS(broad first search)"></a>BFS(broad first search)</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INFINITY  65535 <span class="comment">/* 表示权值的无穷*/</span></span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">int</span> EdgeType;<span class="comment">//边上的权值类型</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">int</span> VertexType;<span class="comment">//顶点类型</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MaxSize=<span class="number">100</span>;</span><br><span class="line"><span class="keyword">int</span> visited[MaxSize];<span class="comment">//全局标识数组</span></span><br><span class="line"> </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MGraph</span>//邻接矩阵类</span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">public</span>:</span><br><span class="line">        MGraph()&#123;vertexNum=<span class="number">0</span>;edgeNum=<span class="number">0</span>;&#125;</span><br><span class="line">        MGraph(VertexType a[],<span class="keyword">int</span> n);<span class="comment">//构造函数，初始化具有n个顶点的零图</span></span><br><span class="line">        <span class="function"><span class="keyword">void</span> <span class="title">CreateMGraph1</span><span class="params">(MGraph *Gp)</span></span>;<span class="comment">//建立无向图的邻接矩阵</span></span><br><span class="line">        <span class="function"><span class="keyword">void</span> <span class="title">BFS</span><span class="params">(<span class="keyword">int</span> v)</span></span>;<span class="comment">//从v出发广度优先遍历</span></span><br><span class="line">    <span class="keyword">public</span>:</span><br><span class="line">        <span class="keyword">int</span> vertexNum,edgeNum;<span class="comment">//顶点数和边数</span></span><br><span class="line">        EdgeType adj[MaxSize][MaxSize];<span class="comment">//邻接矩阵</span></span><br><span class="line">        VertexType vertex[MaxSize];<span class="comment">//顶点表</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">//构造函数，初始化具有n个顶点的零图</span></span><br><span class="line">MGraph::MGraph(VertexType a[],<span class="keyword">int</span> n)</span><br><span class="line">&#123;</span><br><span class="line">    vertexNum=n;edgeNum=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++) vertex[i]=a[i];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;n;j++)</span><br><span class="line">            adj[i][j]=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">//建立无向图的邻接矩阵表示</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">MGraph::CreateMGraph1</span><span class="params">(MGraph *Gp)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i, j, k;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"请输入顶点数和边数（空格分隔）："</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; Gp-&gt;vertexNum &gt;&gt; Gp-&gt;edgeNum;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"请输入顶点信息（空格分隔）："</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; Gp-&gt;vertexNum; i++)</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; Gp-&gt;vertex[i];</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; Gp-&gt;vertexNum; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; Gp-&gt;vertexNum; j++)</span><br><span class="line">            Gp-&gt;adj[i][j] = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (k = <span class="number">0</span>; k &lt; Gp-&gt;edgeNum; k++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">"请输入边（vi, vj)的上标i，下标j（空格分隔）:"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; i &gt;&gt; j;</span><br><span class="line">        Gp-&gt;adj[i][j] = <span class="number">1</span>;</span><br><span class="line">        Gp-&gt;adj[j][i] = <span class="number">1</span>;<span class="comment">// 因为是无向图，矩阵对称</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//从v出发广度优先搜索遍历连通图</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">MGraph::BFS</span><span class="params">(<span class="keyword">int</span> v)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n=vertexNum,front,rear;</span><br><span class="line">    <span class="keyword">int</span> Q[MaxSize];<span class="comment">//队列</span></span><br><span class="line">    front=rear=<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">if</span>(v&lt;<span class="number">0</span>||v&gt;=n) <span class="keyword">throw</span> <span class="string">"位置出错"</span>;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;vertex[v]&lt;&lt;<span class="string">"　"</span>;</span><br><span class="line">    visited[v]=<span class="number">1</span>;</span><br><span class="line">    Q[++rear]=v;<span class="comment">//被访问过的顶点进入队列</span></span><br><span class="line">    <span class="keyword">while</span>(front!=rear)</span><br><span class="line">    &#123;</span><br><span class="line">        v=Q[++front];<span class="comment">//队列首元素出队列</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;n;j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(adj[v][j]==<span class="number">1</span>&amp;&amp;visited[j]==<span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">cout</span>&lt;&lt;vertex[j]&lt;&lt;<span class="string">" "</span>;</span><br><span class="line">                visited[j]=<span class="number">1</span>;</span><br><span class="line">                Q[++rear]=j;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    MGraph grph;</span><br><span class="line">    grph.CreateMGraph1(&amp;grph);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;MaxSize;i++)</span><br><span class="line">        visited[i]=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;grph.vertexNum;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;grph.vertexNum;j++)</span><br><span class="line">            &#123;<span class="built_in">cout</span>&lt;&lt;grph.adj[i][j]&lt;&lt;<span class="string">" "</span>;&#125;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"广度优先遍历结果："</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    grph.BFS(<span class="number">2</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>code</tag>
      </tags>
  </entry>
</search>
